@page "/"

@using DataTransfer.Output.Collections
@using DataTransfer.Output.MachineLearning
@using Web.Components.Data.Search

@inject IHttpRequestBuilderFactory Http

<div class="header">
    <div class="title">
        <img src="/images/code.png" />
        <h1 class="align-middle">Build with AI</h1>
        <p class="font-weight-bold">Cutting-edge functionality<br />with machine and deep learning</p>
    </div>
</div>

<div class="main-content">
    <div class="container">
        <div class="row d-block">
            <EditForm Model="searchData" OnValidSubmit="(() => ChangePage(1))">
                <div class="input-group mb-3">
                    <InputText class="form-control" type="search" placeholder="Search models" @bind-Value="searchData.Term" />
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="submit">
                            <i class="fa fa-search"></i>
                        </button>
                    </div>
                </div>
            </EditForm>
        </div>

        @if (pageDetails.Items.Any())
        {
            foreach (ModelInfo model in pageDetails.Items)
            {
                <div class="row d-block mb-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">
                                <NavLink href=@string.Concat("/machine-learning-model/super-resolution/", model.Id)>@model.Category</NavLink>
                            </h5>
                            <h6 class="card-subtitle text-muted">@model.Title</h6>
                            <p class="card-text">@model.Description</p>
                            <p class="card-text text-muted text-right">
                                @model.Date.ToShortDateString()
                            </p>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="row d-block mb-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title text-center">
                            No models found
                        </h5>
                    </div>
                </div>
            </div>
        }
    </div>

    <nav>
        <ul class="pagination justify-content-center">
            @{
                string disabled;
                disabled = pageDetails.HasPreviousPage ? string.Empty : "disabled";
                <li class="page-item @disabled">
                    <Blazorise.Link Class="page-link" Clicked="(() => ChangePage(pageDetails.PageIndex - 1))">
                        &laquo;
                    </Blazorise.Link>
                </li>
                <li class="page-item active">
                    <Blazorise.Link Class="page-link">
                        @(pageDetails.PageIndex)
                    </Blazorise.Link>
                </li>
                disabled = pageDetails.HasNextPage ? string.Empty : "disabled";
                <li class="page-item @disabled">
                    <Blazorise.Link Class="page-link" Clicked="(() => ChangePage(pageDetails.PageIndex + 1))">
                        &raquo;
                    </Blazorise.Link>
                </li>
            }
        </ul>
    </nav>
</div>

@code{
    private SearchData searchData = new()
    {
        Term = ""
    };
    private Page<ModelInfo> pageDetails = new()
    {
        PageSize = 5,
        PageIndex = 1,
        Items = new List<ModelInfo>()
    };

    protected override async Task OnInitializedAsync()
    {
        await ChangePage(1);
    }

    private async Task ChangePage(int pageIndex)
    {
        await Http.Create($"/api/machine-learning-model/page?pageSize={pageDetails.PageSize}&pageIndex={pageIndex}&searchTerm={searchData.Term}")
            .OnOk<Page<ModelInfo>>((page) =>
            {
                pageDetails = page;
            })
            .Get();
    }
}