@page "/account/login"

@using Web.Components.Data.User

@inject IHttpRequestBuilderFactory Http
@inject IServiceProvider ServiceProvider
@inject NavigationManager NavigationManager

<section class="authentication">
    <div class="h-100">
        <div class="container h-100">
            <div class="row justify-content-md-center h-100">
                <div class="card-wrapper">
                    <div class="brand">
                        <img src="/images/logo-secondary.jpg">
                    </div>
                    <div class="card fat">
                        <div class="card-body">
                            <h4 class="card-title">Login</h4>

                            <EditForm Model="loginData" OnValidSubmit="OnValidFormSubmit">
                                <ServerSideValidator @ref="serverValidator" />
                                <DataAnnotationsValidator />
                                <div class="form-group">
                                    <InputText type="text" class="form-control" placeholder="Username" @bind-Value="loginData.Username"></InputText>
                                    <ValidationMessage For="@(() => loginData.Username)" />
                                </div>
                                <div class="form-group">
                                    <InputText type="password" class="form-control" placeholder="Password" @bind-Value="loginData.Password"></InputText>
                                    <ValidationMessage For="@(() => loginData.Password)" />
                                </div>
                                <button class="btn btn-primary btn-block" type="submit">LOGIN</button>
                                <div class="d-flex justify-content-center mt-4">
                                    <p>
                                        Don't have an account?
                                        <Blazorise.Link To="/account/register">
                                            Create one
                                        </Blazorise.Link>
                                    </p>
                                </div>
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private LoginData loginData = new();
    private ServerSideValidator serverValidator;

    private async Task OnValidFormSubmit()
    {
        await ServiceProvider.Get<SessionProvider>().LoginAsync(1, "user");

        if (NavigationManager.TryGetQueryString("returnUrl", out string returnUrl))
        {
            NavigationManager.NavigateTo(returnUrl);
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }
    }
}