@page "/register"

@using DataTransfer.Input.UserProfile
@using DataTransfer.Output.UserProfile
@using Web.Components.Data.User

@inject IHttpRequestBuilderFactory Http
@inject IServiceProvider ServiceProvider
@inject NavigationManager NavigationManager

<div class="h-100">
    <div class="container h-100">
        <div class="row justify-content-md-center h-100">
            <div class="card-wrapper">
                <div class="brand">
                    <img src="/images/logo-secondary.jpg">
                </div>
                <div class="card fat">
                    <div class="card-body">
                        <h4 class="card-title">Register</h4>

                        <EditForm Model="registerData" OnValidSubmit="OnValidFormSubmit">
                            <ServerSideValidator @ref="serverValidator" />
                            <DataAnnotationsValidator />
                            <div class="form-group">
                                <InputText type="text" class="form-control" placeholder="Username" @bind-Value="registerData.Username"></InputText>
                                <ValidationMessage For="@(() => registerData.Username)" />
                            </div>
                            <div class="form-group">
                                <InputText type="password" class="form-control" placeholder="Password" @bind-Value="registerData.Password"></InputText>
                                <ValidationMessage For="@(() => registerData.Password)" />
                            </div>
                            <div class="form-group">
                                <InputText type="password" class="form-control" placeholder="Confirm password" @bind-Value="registerData.ConfirmPassword"></InputText>
                                <ValidationMessage For="@(() => registerData.ConfirmPassword)" />
                            </div>
                            <button class="btn btn-primary btn-block" type="submit">REGISTER</button>
                            <div class="d-flex justify-content-center mt-4">
                                <p>
                                    Already have an account?
                                    @if (NavigationManager.TryGetQueryString("returnUrl", out string returnUrl))
                                    {
                                        <Blazorise.Link To=@string.Concat("/login?returnUrl=", returnUrl)>
                                            Login
                                        </Blazorise.Link>
                                    }
                                    else
                                    {
                                        <Blazorise.Link To="/login">
                                            Login
                                        </Blazorise.Link>
                                    }
                                </p>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private RegisterData registerData = new();
    private ServerSideValidator serverValidator;

    private async Task OnValidFormSubmit()
    {
        await Http.Create("/api/account/register")
            .OnCreated<UserDetails>(async (user) =>
            {
                await ServiceProvider.Get<SessionProvider>().LoginAsync(user.Id, user.Role);

                if (NavigationManager.TryGetQueryString("returnUrl", out string returnUrl))
                {
                    NavigationManager.NavigateTo(returnUrl);
                }
                else
                {
                    NavigationManager.NavigateTo("/");
                }
            })
            .OnBadRequest(() =>
            {
                serverValidator.DisplayError(nameof(registerData.Username), "That username is already in use, try another.");
            })
            .Post(new NewUserProfile()
            {
                Username = registerData.Username,
                Password = registerData.Password
            });
    }
}